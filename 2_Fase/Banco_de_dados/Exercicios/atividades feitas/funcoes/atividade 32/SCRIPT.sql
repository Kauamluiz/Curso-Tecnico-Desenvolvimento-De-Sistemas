SET SQL_SAFE_UPDATES = 0;
SET GLOBAL log_bin_trust_function_creators = 1;

DROP DATABASE IF EXISTS ATIVIDADE_32;
CREATE DATABASE ATIVIDADE_32;
USE ATIVIDADE_32;

CREATE TABLE VALORES(
	NUMERO_1 INT
    , NUMERO_2 INT
);

INSERT INTO VALORES(NUMERO_1, NUMERO_2) VALUES (ROUND(RAND() * 100, 0), ROUND(RAND() * 100, 0));
INSERT INTO VALORES(NUMERO_1, NUMERO_2) VALUES (ROUND(RAND() * 100, 0), ROUND(RAND() * 100, 0));
INSERT INTO VALORES(NUMERO_1, NUMERO_2) VALUES (ROUND(RAND() * 100, 0), ROUND(RAND() * 100, 0));
INSERT INTO VALORES(NUMERO_1, NUMERO_2) VALUES (ROUND(RAND() * 100, 0), ROUND(RAND() * 100, 0));
INSERT INTO VALORES(NUMERO_1, NUMERO_2) VALUES (ROUND(RAND() * 100, 0), ROUND(RAND() * 100, 0));


-- QUESTAO 01
DELIMITER $$
CREATE FUNCTION FN_ADICAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_1 + pNUMERO_2;
    RETURN vRESULTADO;
END $$
DELIMITER ;

SELECT
	NUMERO_1
    , NUMERO_2
    , FN_ADICAO(NUMERO_1, NUMERO_2) AS SOMA
FROM
	VALORES;
    
    
-- QUESTAO 02
DELIMITER $$
CREATE FUNCTION FN_SUBTRACAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_1 - pNUMERO_2;
    RETURN vRESULTADO;
END $$
DELIMITER ;

SELECT
	NUMERO_1
    , NUMERO_2
    , FN_SUBTRACAO(NUMERO_1, NUMERO_2) AS SUBTRACAO
FROM
	VALORES;


-- QUESTAO 03
DELIMITER $$
CREATE FUNCTION FN_MULTIPLICACAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS INT
BEGIN
	DECLARE vRESULTADO INT;
    SET vRESULTADO = pNUMERO_1 * pNUMERO_2;
    RETURN vRESULTADO;
END $$
DELIMITER ;

SELECT
	NUMERO_1
    , NUMERO_2
    , FN_MULTIPLICACAO(NUMERO_1, NUMERO_2) AS MULTIPLICACAO
FROM
	VALORES;


-- QUESTAO 04
DELIMITER $$
CREATE FUNCTION FN_DIVISAO(pNUMERO_1 INT, pNUMERO_2 INT) RETURNS DECIMAL(8,2)
BEGIN
	DECLARE vRESULTADO DECIMAL(8,2);
    SET vRESULTADO = pNUMERO_1 / pNUMERO_2;
    RETURN vRESULTADO;
END $$
DELIMITER ;

SELECT
	NUMERO_1
    , NUMERO_2
    , FN_DIVISAO(NUMERO_1, NUMERO_2) AS DIVISAO
FROM
	VALORES;


-- QUESTAO 05
DELIMITER $$
CREATE FUNCTION FN_CALCULADORA_IF(pNUMERO_1 INT, pNUMERO_2 INT, pOPERADOR CHAR(1)) RETURNS DECIMAL(8,2)
BEGIN
	DECLARE vRESULTADO DECIMAL(8,2);
    IF(pOPERADOR = '+')THEN
		SET vRESULTADO = FN_ADICAO(pNUMERO_1, pNUMERO_2);
	ELSEIF(pOPERADOR = '-')THEN
		SET vRESULTADO = FN_SUBTRACAO(pNUMERO_1, pNUMERO_2);
	ELSEIF(pOPERADOR = '*')THEN
		SET vRESULTADO = FN_MULTIPLICACAO(pNUMERO_1, pNUMERO_2);
	ELSEIF(pOPERADOR = '/')THEN
		SET vRESULTADO = FN_DIVISAO(pNUMERO_1, pNUMERO_2);
	END IF;
    RETURN vRESULTADO;
END $$

CREATE FUNCTION FN_CALCULADORA_CASE(pNUMERO_1 INT, pNUMERO_2 INT, pOPERADOR CHAR(1)) RETURNS DECIMAL(8,2)
BEGIN
	DECLARE vRESULTADO DECIMAL(8,2);
    CASE pOPERADOR
		WHEN '+' THEN SET vRESULTADO = FN_ADICAO(NUMERO_1, NUMERO_2);
        WHEN '-' THEN SET vRESULTADO = FN_SUBTRACAO(NUMERO_1, NUMERO_2);
        WHEN '*' THEN SET vRESULTADO = FN_MULTIPLICACAO(NUMERO_1, NUMERO_2);
        WHEN '/' THEN SET vRESULTADO = FN_DIVISAO(NUMERO_1, NUMERO_2);
	END CASE;
	RETURN vRESULTADO;
END $$
DELIMITER ;

SELECT
	NUMERO_1
    , NUMERO_2
    , FN_CALCULADORA_IF(NUMERO_1, NUMERO_2, '+')
FROM
	VALORES;


-- QUESTAO 06
DELIMITER $$
CREATE FUNCTION FN_PRIMO(pNUMERO INT) RETURNS CHAR(1)
BEGIN
	DECLARE vDIVISOR INT;
    DECLARE vPRIMO CHAR(1);
    
    SET vDIVISOR = pNUMERO - 1;
    SET vPRIMO = 'S';
    
    WHILE (vDIVISOR > 1 AND vPRIMO = 's') DO
		IF((pNUMERO % vDIVISOR) = 0) THEN
			SET vPRIMO = 'N';
		END IF;
        SET vDIVISOR = vDIVISOR - 1;
	END WHILE;
    
    RETURN vPRIMO;
END $$
DELIMITER ;

SELECT FN_PRIMO(97);


-- QUESTAO 07
DELIMITER $$
CREATE FUNCTION FN_IDADE(pDT_NASC DATE) RETURNS INT
BEGIN
	DECLARE vANO_NASC INT;
	DECLARE vANO_ATUAL INT;
    DECLARE vIDADE INT;
    DECLARE vNIVER DATE;

    SET vANO_NASC = YEAR(pDT_NASC);
    SET vANO_ATUAL = YEAR(NOW());
    SET vIDADE = vANO_ATUAL - vANO_NASC;
    SET vNIVER = DATE_ADD(pDT_NASC, INTERVAL vIDADE YEAR);

    IF(vNIVER > NOW()) THEN
		SET vIDADE = vIDADE - 1;
	END IF;
    
    RETURN vIDADE;
END $$
DELIMITER ;

SELECT FN_IDADE('2006-08-29 01:00:00');


-- QUESTAO 8
DELIMITER $$
CREATE FUNCTION FN_NIVER(pDT_NASCIMENTO DATE) RETURNS DATE
BEGIN
	DECLARE vANO_NASCIMENTO INT;
    DECLARE vANO_ATUAL INT;
    DECLARE vIDADE INT;
    DECLARE vNIVER DATE;
   
    SET vANO_NASCIMENTO = YEAR(pDT_NASCIMENTO);
    SET vANO_ATUAL = YEAR(NOW());
   
    SET vIDADE = vANO_ATUAL - vANO_NASCIMENTO;
    SET vNIVER = DATE_ADD(pDT_NASCIMENTO, INTERVAL vIDADE YEAR);
   
    IF (vNIVER < NOW()) THEN
		SET vNIVER = DATE_ADD(vNIVER, INTERVAL 1 YEAR);
    END IF;
   
    RETURN vNIVER;

END $$
DELIMITER ;

SELECT FN_NIVER("2006-08-29 ");


-- QUESTAO 9
DELIMITER $$
CREATE FUNCTION validar_CPF(CPF CHAR(11)) RETURNS INT
BEGIN
    DECLARE SOMA INT;
    DECLARE INDICE INT;
    DECLARE DIGITO_1 INT;
    DECLARE DIGITO_2 INT;
    DECLARE NR_DOCUMENTO_AUX VARCHAR(11);
   
	DECLARE DIGITO_1_CPF CHAR(2);
    DECLARE DIGITO_2_CPF CHAR(2);

    SET NR_DOCUMENTO_AUX = LTRIM(RTRIM(CPF));
    IF (NR_DOCUMENTO_AUX IN ('00000000000', '11111111111', '22222222222', '33333333333', '44444444444', '55555555555', '66666666666',
    '77777777777', '88888888888', '99999999999', '12345678909')) THEN
        RETURN 0;
    END IF;
   

    IF (LENGTH(NR_DOCUMENTO_AUX) <> 11) THEN
        RETURN 0;
    ELSE
     SET DIGITO_1_CPF = SUBSTRING(NR_DOCUMENTO_AUX,LENGTH(NR_DOCUMENTO_AUX)-1,1);
	SET DIGITO_2_CPF = SUBSTRING(NR_DOCUMENTO_AUX,LENGTH(NR_DOCUMENTO_AUX),1);
 
        SET SOMA = 0;
        SET INDICE = 1;
        WHILE (INDICE <= 9) DO          
            SET Soma = Soma + CAST(SUBSTRING(NR_DOCUMENTO_AUX,INDICE,1) AS UNSIGNED) * (11 - INDICE);            
            SET INDICE = INDICE + 1;      
         END WHILE;      
         SET DIGITO_1 = 11 - (SOMA % 11);      
         IF (DIGITO_1 > 9) THEN
            SET DIGITO_1 = 0;
         END IF;
       
        SET SOMA = 0;
        SET INDICE = 1;
        WHILE (INDICE <= 10) DO
             SET Soma = Soma + CAST(SUBSTRING(NR_DOCUMENTO_AUX,INDICE,1) AS UNSIGNED) * (12 - INDICE);              
             SET INDICE = INDICE + 1;
        END WHILE;
        SET DIGITO_2 = 11 - (SOMA % 11);
        IF DIGITO_2 > 9 THEN
            SET DIGITO_2 = 0;
        END IF;
     
        IF (DIGITO_1 = DIGITO_1_CPF) AND (DIGITO_2 = DIGITO_2_CPF) THEN
            RETURN 1;
        ELSE
            RETURN 0;
        END IF;
 END IF;
END$$

 SELECT CPF, validar_CPF(CPF) as resultado FROM CPF
SELECT CPF from CPF where validar_CPF(CPF) = 1

DELIMITER ;

SELECT validar_CPF("15351384684");
