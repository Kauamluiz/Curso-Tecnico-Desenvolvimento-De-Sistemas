DROP DATABASE IF EXISTS DBCOMPRAPARCELADA;
CREATE DATABASE DBCOMPRAPARCELADA;
USE DBCOMPRAPARCELADA;

CREATE TABLE COMPRA (
	IDCOMPRA INT NOT NULL AUTO_INCREMENT
	, VALOR_TOTAL NUMERIC(8,2)
	, QTDE_PARCELA INT
	, DT_COMPRA DATE
    , DIA_VENCIMENTO INT
	, PRIMARY KEY (IDCOMPRA)
);

CREATE TABLE BOLETO(
	IDBOLETO INT NOT NULL AUTO_INCREMENT
    , DT_GERACAO DATE
    , DT_VENCIMENTO DATE
    , VALOR_TOTAL numeric(8,2)
    , PRIMARY KEY(IDBOLETO)
);

CREATE TABLE PARCELA(
	IDPARCELA INT NOT NULL AUTO_INCREMENT
    	, IDCOMPRA INT NOT NULL
        , IDBOLETO INT
    	, NUMERO INT
    	, DT_VENCIMENTO DATE
    	, VALOR NUMERIC(8,2)
    	, PRIMARY KEY (IDPARCELA)
    	, FOREIGN KEY (IDCOMPRA) REFERENCES COMPRA (IDCOMPRA)
        , FOREIGN KEY (IDBOLETO) REFERENCES BOLETO (IDBOLETO)
);

-- QUESTAO 01
DELIMITER $$
CREATE PROCEDURE SP_GERARCOMPRA(pVALOR NUMERIC(8, 2), pQTDE_PARCELA INT, pDIA_VENCIMENTO INT)
BEGIN
	DECLARE vIDCOMPRA INT;
    DECLARE vPARCELA INT;
    DECLARE vVALOR_PARCELA NUMERIC(8,2);
    DECLARE vVENCIMENTO DATE;
    DECLARE vDIFERENCA NUMERIC(8,2);
    DECLARE vIDPARCELA INT;
    
	-- INCLUINDO A COMPRA
    INSERT INTO COMPRA(VALOR_TOTAL, QTDE_PARCELA, DT_COMPRA, DIA_VENCIMENTO)VALUES(pVALOR, pQTDE_PARCELA, NOW(), pDIA_VENCIMENTO);
    
    -- LOCALIZAR O ID GERADO NO INSERT DA COMPRA
    SET vIDCOMPRA = LAST_INSERT_ID();
	
    -- INCLUINDO PARCELAS
    SET vPARCELA = 1;
    SET vVALOR_PARCELA = pVALOR / pQTDE_PARCELA;
    WHILE (vPARCELA <= pQTDE_PARCELA) DO
    
		SET vVENCIMENTO = LAST_DAY(NOW());
        SET vVENCIMENTO = DATE_ADD(vVENCIMENTO, INTERVAL pDIA_VENCIMENTO DAY);
        SET vVENCIMENTO = DATE_ADD(vVENCIMENTO, INTERVAL vPARCELA - 1 MONTH);
    
		INSERT INTO PARCELA(IDCOMPRA, NUMERO, VALOR, DT_VENCIMENTO)
        VALUES(vIDCOMPRA, vPARCELA, vVALOR_PARCELA, vVENCIMENTO);
        SET vPARCELA = vPARCELA + 1;
        
	END WHILE;
    
    SELECT 
		COMPRA.VALOR_TOTAL - SUM(PARCELA.VALOR) AS DIFERENCA
		, MAX(PARCELA.IDPARCELA)
	INTO
		vDIFERENCA, vIDPARCELA
	FROM 
		COMPRA
    INNER JOIN PARCELA ON
		COMPRA.IDCOMPRA = PARCELA.IDCOMPRA
	WHERE 
		COMPRA.IDCOMPRA = vIDCOMPRA
	GROUP BY
		COMPRA.VALOR_TOTAL;
        
	UPDATE PARCELA
    SET VALOR = VALOR + vDIFERENCA
    WHERE IDPARCELA = vIDPARCELA;

END$$

-- DESAFIO
CREATE PROCEDURE SP_GERARBOLETO(pDATA_REF DATE)
BEGIN
	DECLARE vIDBOLETO INT;
    DECLARE vTOTAL NUMERIC(8,2);
    DECLARE vVENCIMENT DATE;
    
    -- INCLUINDO UM VALOR NA TABELA BOLETO
    INSERT INTO BOLETO(DT_GERACAO, DT_VENCIMENTO)
    VALUES(NOW(), DATE_ADD(LAST_DAY(NOW()), INTERVAL 1 DAY));
    
    -- RECUPERANDO O ID DO BOLETO GERADO
    SET vIDBOLETO = LAST_INSERT_ID();
    
    -- ASSOCIANDO O BOLETO A PARCELA
    UPDATE PARCELA
    SET IDBOLETO = vIDBOLETO
    WHERE
		IDBOLETO IS NULL
        AND DT_VENCIMENTO < pDATA_REF;
	
    -- SOMAR OS VALORES ASSOCIAODS AO BOLETO
	SELECT SUM(vALOR)
    INTO vTOTAL
    FROM PARCELA
    WHERE IDBOLETO = vIDBOLETO;
    
    -- ATUALIZANDO OS BOLETOS
    UPDATE BOLETO
    SET VALOR_TOTAL = vTOTAL
    WHERE IDBOLETO = vIDBOLETO;
    
END$$
DELIMITER ;

CALL SP_GERARCOMPRA(140, 12, 8);
CALL SP_GERARCOMPRA(150, 5, 10);
CALL SP_GERARCOMPRA(5000, 18, 15);
SELECT * FROM COMPRA;
SELECT * FROM PARCELA ORDER BY DT_VENCIMENTO;

CALL SP_GERARBOLETO ('2023-07-01');
SELECT * FROM BOLETO;



